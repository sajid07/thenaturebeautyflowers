# This is a basic workflow to help you get started with Actions
# Name: Connect to an AWS role from a GitHub repository

# Controls when the action will run. Invokes the workflow on push events but only for the master branch
on:
  push:
    branches: [master]

env:
  AWS_REGION: "ap-south-1" # Change to reflect your Region

# Permission can be added at job level or workflow level
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v4
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          role-to-assume: arn:aws:iam::797435255075:role/thenaturebeautyflowers-GitHubAction-AssumeRoleWithAction
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity

      # Start Production Build
      - name: "AWS CodeBuild run build"
        uses: aws-actions/aws-codebuild-run-build@v1.0.18
        with:
          project-name: thenaturebeautyflowers-ProductionBuild
          disable-source-override: true

      # Step 3 - check the application-name and deployment group name
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          aws deploy create-deployment --application-name thenaturebeautyflowers --deployment-group-name thenaturebeautyflowers-staging --deployment-config-name CodeDeployDefault.AllAtOnce --s3-location bucket=thenaturebeautyflowers-build-artifacts,key=thenaturebeautyflowers-ProductionBuild,bundleType=zip --ignore-application-stop-failures
